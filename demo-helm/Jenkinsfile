pipeline {
    agent any

    environment {
        AZURE_SUBSCRIPTION_ID='2ef67011-143e-4616-9e05-64925cbd0aa0'
        AZURE_TENANT_ID='9dae36f4-0de6-4a4e-a718-3dc11e509f38'
        RESOURCE_GROUP='manulife-training-1'
        CONTAINER_REGISTRY='manulifetrainingacr.azurecr.io'
        RESOURCE_GROUP='Manulife_AKS'
        REPO="manulife"
        IMAGE_NAME="app"
        TAG="v1"
        NAMESPACE="default"
    }

    stages {
        stage('Checkout git') {
            steps {
                checkout scm
            }
        }
        stage('Build and Push Image to ACR') {
            steps {
                dir('demo-helm') {
                    withCredentials([usernamePassword(credentialsId: 'myAzureCredential', passwordVariable: 'AZURE_CLIENT_SECRET', usernameVariable: 'AZURE_CLIENT_ID')]) {
                                sh 'az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET -t $AZURE_TENANT_ID'
                                sh 'az account set -s $AZURE_SUBSCRIPTION_ID'
                    }
                    withCredentials([usernamePassword(credentialsId: 'spAzureCredentialPiyushACR', passwordVariable: 'ACR_ACCESS_KEY', usernameVariable: 'ACR_USERNAME')]) {
                                sh 'az acr login --name $CONTAINER_REGISTRY --resource-group $RESOURCE_GROUP --username $ACR_USERNAME --password $ACR_ACCESS_KEY'
                                sh 'docker build -t $IMAGE_NAME:$TAG .'
                                sh 'docker tag $IMAGE_NAME:$TAG $CONTAINER_REGISTRY/$REPO/$IMAGE_NAME:$TAG'
                                sh 'docker push $CONTAINER_REGISTRY/$REPO/$IMAGE_NAME:$TAG'
                    }
                }
            }
        }
        stage('Deploy to AKS using HELM') {
            steps {
                dir('demo-helm') {
                    sh 'helm upgrade --install -f ./app-chart/myvalues.yaml app ./app-chart/ --namespace ${NAMESPACE}'
                }
            }
        }
    }
}
